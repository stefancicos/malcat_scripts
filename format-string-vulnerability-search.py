"""
name: Format String Vulnerability Search
category: binary exploitation
author: stefancicos
icon: wxART_DISASM

Searches for potential format string vulnerabilities and prints them to the console.

https://github.com/stefancicos/malcat_scripts

"""

import malcat
import itertools

addresses = []

for sym in analysis.syms:
	if sym.name in ["printf","fprintf","sprintf","snprintf","vfprintf","vprintf","vsprintf","vsnprintf"]:
		addresses += {analysis.a2v(sym.address)}
		addresses.append(sym.name)

if addresses:
	for fn in analysis.fns:
		for basic_block in analysis.cfg[fn.start : fn.end]:
			if basic_block.code:
				for insn in analysis.asm[basic_block.start : basic_block.end]:
					if insn.type == Instruction.Type.CALL or insn.type == Instruction.Type.JUMP:
						for i,op in enumerate(insn): 
							if op.value in addresses:
								print("Potentially vulnerable function " + addresses[addresses.index(op.value)+1] + " at "+ str(hex(analysis.a2v(insn.address))))
else:
	print("No potentially vulnerable functions found")
